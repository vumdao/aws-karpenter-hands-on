import { App, Environment, Stack, StackProps, CfnJson, CfnOutput } from 'aws-cdk-lib';

import { Role, FederatedPrincipal, PolicyStatement } from 'aws-cdk-lib/aws-iam';
import { Construct } from 'constructs';


export interface ServiceAccStackProps extends StackProps {
  oidcArn: string;
  oidcUrl: string;
}

export class KarpenterServiceAccount extends Stack {
  constructor(scope: Construct, id: string, props: ServiceAccStackProps) {
    super(scope, id, props);

    const stringEquals = new CfnJson(this, 'KarpenterCondiftionJson', {
      value: {
        [`${props.oidcUrl}:sub`]: 'system:serviceaccount:karpenter:karpenter-controller',
        [`${props.oidcUrl}:aud`]: 'sts.amazonaws.com',
      },
    });

    const ec2Statement = new PolicyStatement({
      sid: 'AutoScalingGroup',
      actions: [
        "ec2:CreateLaunchTemplate",
        "ec2:CreateFleet",
        "ec2:RunInstances",
        "ec2:CreateTags",
        "iam:PassRole",
        "ec2:TerminateInstances",
        "ec2:DeleteLaunchTemplate",
        "ec2:DescribeLaunchTemplates",
        "ec2:DescribeInstances",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeInstanceTypes",
        "ec2:DescribeInstanceTypeOfferings",
        "ec2:DescribeAvailabilityZones",
        "ssm:GetParameter"
      ],
      resources: ['*'],
      conditions: {
        StringEquals: { 'aws:RequestedRegion': REGION },
      },
    });

    const karpenterControllerRole = new Role(this, 'karpenterControllerRole', {
      roleName: 'karpenter-controller-dev',
      assumedBy: new FederatedPrincipal(
        props.oidcArn,
        {
          StringEquals: stringEquals,
        },
        'sts:AssumeRoleWithWebIdentity',
      ),
    });

    karpenterControllerRole.addToPolicy(ec2Statement);

    new CfnOutput(this, 'KarpenterControllerRole', { value: karpenterControllerRole.roleArn });
  }
}



const app = new App();
const eksEnv: Environment = {
  region: devEnv.region,
  account: CDK_DEFAULT_ACCOUNT,
};

new KarpenterServiceAccount(app, 'KarpenterControllerSA', devEnv, {
    description: 'Karpenter IAM Service Account',
    env: eksEnv,
    oidcArn: iamOidc.oidcArn,
    oidcUrl: oidc_url,
    tags: TagsProp('eks', devEnv),
  });

app.synth();